select(HoloPairType, BodySize1, BodySize2, holo_prop) %>%
mutate(timePeriod="Holocene", mergeKey=paste(BodySize1, BodySize2, sep="-"), type=paste("Holocene", HoloPairType))
modBM <- BM %>%
filter(ModPairType %in% c("Ag", "Random", "Seg"), BodySize1 %in% 1:6, BodySize2 %in% 1:6) %>%
group_by(ModPairType) %>%
mutate(CountPerPairType=n()) %>%
group_by(ModPairType, BodySize1, BodySize2) %>%
summarize(countPerBodySizeTraits=n(), CountPerPairType=unique(CountPerPairType)) %>%
mutate(mod_prop=countPerBodySizeTraits/CountPerPairType) %>%
select(ModPairType, BodySize1, BodySize2, mod_prop) %>%
mutate(timePeriod="Modern", mergeKey=paste(BodySize1, BodySize2, sep="-"), type=paste("Modern", ModPairType))
View(holoBM)
View(modBM)
left_join(holoBM, modBM, by=c("mergeKey"="mergeKey"))
forPlot <- left_join(holoBM, modBM, by=c("mergeKey"="mergeKey")) %>% left_joint(pleistBM, by=c("mergeKey"="mergeKey"))
forPlot <- left_join(holoBM, modBM, by=c("mergeKey"="mergeKey")) %>% left_join(pleistBM, by=c("mergeKey"="mergeKey"))
View(forPlot)
forPlot %>% mutate(PleistModDiff = (pleist_prop - mod_prop))
forPlot %>% mutate(PleistModDiff = (pleist_prop - mod_prop), PleistHolDiff = (pleist_prop - holo_prop), HoloModDiff = (holo_prop - mod_diff))
forPlot %>% mutate(PleistModDiff = (pleist_prop - mod_prop), PleistHolDiff = (pleist_prop - holo_prop), HoloModDiff = (holo_prop - mod_prop))
forPlot %>% mutate(PleistModDiff = (pleist_prop - mod_prop), PleistHolDiff = (pleist_prop - holo_prop), HoloModDiff = (holo_prop - mod_prop)) %>%
select(PleistModDiff, PleistHolDiff, HoloModDiff, BodySize1.x, BodySize2.x)
forPlot <- left_join(holoBM, modBM, by=c("mergeKey"="mergeKey")) %>% left_join(pleistBM, by=c("mergeKey"="mergeKey")) %>% ungroup
forPlot %>% mutate(PleistModDiff = (pleist_prop - mod_prop), PleistHolDiff = (pleist_prop - holo_prop), HoloModDiff = (holo_prop - mod_prop)) %>%
select(PleistModDiff, PleistHolDiff, HoloModDiff, BodySize1.x, BodySize2.x)
forPlot %>% mutate(PleistModDiff = (pleist_prop - mod_prop), PleistHolDiff = (pleist_prop - holo_prop), HoloModDiff = (holo_prop - mod_prop)) %>%
select(PleistModDiff, PleistHolDiff, HoloModDiff, BodySize1.x, BodySize2.x, type)
forPlot %>% mutate(PleistModDiff = (pleist_prop - mod_prop), PleistHolDiff = (pleist_prop - holo_prop), HoloModDiff = (holo_prop - mod_prop)) %>%
select(PleistModDiff, PleistHolDiff, HoloModDiff, BodySize1.x, BodySize2.x, type, timePeriod)
head(forPLot, 100)
head(forPlot, 100)
print(forPlot, 100)
View(forPlot)
View(forPlot)
View(modBM)
View(forPlot)
BM <- read.table("~/Desktop/summaryPairsTraitsData.csv", header=T, sep=",")
BM <- tidyr::separate(BM, Body.size, into=c("BodySize1", "BodySize2"))
pleistBM <- BM %>%
filter(PleisPairType %in% c("Ag", "Random", "Seg"), BodySize1 %in% 1:6, BodySize2 %in% 1:6) %>%
group_by(PleisPairType) %>%
mutate(CountPerPairType=n()) %>%
group_by(PleisPairType, BodySize1, BodySize2) %>%
summarize(countPerBodySizeTraits=n(), CountPerPairType=unique(CountPerPairType)) %>%
mutate(pleist_prop=countPerBodySizeTraits/CountPerPairType) %>%
select(PleisPairType, BodySize1, BodySize2, pleist_prop) %>%
mutate(timePeriod="Pleistocene", mergeKey=paste(BodySize1, BodySize2, sep="-"), type=PleisPairType)
holoBM <- BM %>%
filter(HoloPairType %in% c("Ag", "Random", "Seg"), BodySize1 %in% 1:6, BodySize2 %in% 1:6) %>%
group_by(HoloPairType) %>%
mutate(CountPerPairType=n()) %>%
group_by(HoloPairType, BodySize1, BodySize2) %>%
summarize(countPerBodySizeTraits=n(), CountPerPairType=unique(CountPerPairType)) %>%
mutate(holo_prop=countPerBodySizeTraits/CountPerPairType) %>%
select(HoloPairType, BodySize1, BodySize2, holo_prop) %>%
mutate(timePeriod="Holocene", mergeKey=paste(BodySize1, BodySize2, sep="-"), type=HoloPairType)
modBM <- BM %>%
filter(ModPairType %in% c("Ag", "Random", "Seg"), BodySize1 %in% 1:6, BodySize2 %in% 1:6) %>%
group_by(ModPairType) %>%
mutate(CountPerPairType=n()) %>%
group_by(ModPairType, BodySize1, BodySize2) %>%
summarize(countPerBodySizeTraits=n(), CountPerPairType=unique(CountPerPairType)) %>%
mutate(mod_prop=countPerBodySizeTraits/CountPerPairType) %>%
select(ModPairType, BodySize1, BodySize2, mod_prop) %>%
mutate(timePeriod="Modern", mergeKey=paste(BodySize1, BodySize2, sep="-"), type=ModPairType)
forPlot <- left_join(holoBM, modBM, by=c("mergeKey"="mergeKey")) %>% left_join(pleistBM, by=c("mergeKey"="mergeKey")) %>% ungroup
forPlot %>% mutate(PleistModDiff = (pleist_prop - mod_prop), PleistHolDiff = (pleist_prop - holo_prop), HoloModDiff = (holo_prop - mod_prop)) %>%
select(PleistModDiff, PleistHolDiff, HoloModDiff, BodySize1.x, BodySize2.x, type, timePeriod)
View(forPlot)
View(forPlot)
test <- forPlot %>% mutate(PleistModDiff = (pleist_prop - mod_prop), PleistHolDiff = (pleist_prop - holo_prop), HoloModDiff = (holo_prop - mod_prop)) %>%
select(PleistModDiff, PleistHolDiff, HoloModDiff, BodySize1.x, BodySize2.x, type, timePeriod)
View(test)
test <- forPlot %>% mutate(PleistModDiff = (pleist_prop - mod_prop), PleistHolDiff = (pleist_prop - holo_prop), HoloModDiff = (holo_prop - mod_prop)) %>%
select(PleistModDiff, PleistHolDiff, HoloModDiff, BodySize1.x, BodySize2.x, type)
View(test)
forPlot <- left_join(holoBM, modBM, by=c("mergeKey"="mergeKey")) %>% left_join(pleistBM, by=c("mergeKey"="mergeKey")) %>% ungroup
forPlot <- forPlot %>% mutate(PleistModDiff = (pleist_prop - mod_prop), PleistHolDiff = (pleist_prop - holo_prop), HoloModDiff = (holo_prop - mod_prop)) %>%
select(PleistModDiff, PleistHolDiff, HoloModDiff, BodySize1=BodySize1.x, BodySize2=BodySize2.x, type)
View(forPlot)
View(forPlot)
geom_raster(value=PleistModDiff, fill=PleistModDiff)
ggplot(data=forPlot, aes(x=BodySize1, y=BodySize2)) +
geom_raster(value=PleistModDiff, fill=PleistModDiff)
View(forPlot)
ggplot(aes(x=BodySize1, y=BodySize2), data=forPlot) +
geom_raster(value=PleistModDiff, fill=PleistModDiff)
View(forPlot)
ggplot(aes(x=BodySize1, y=BodySize2), data=forPlot) +
geom_raster(value=PleistModDiff, fill=PleistModDiff)
ggplot(aes(x=BodySize1, y=BodySize2), data=forPlot) +
geom_raster(aes(value=PleistModDiff, fill=PleistModDiff))
View(forPlot)
ggplot(aes(x=BodySize1, y=BodySize2), data=forPlot) +
geom_raster(aes(value=PleistModDiff, fill=PleistModDiff)) +
facet_wrap(~type, nrow=3) +
scale_fill_distiller(palette ="PuOr") +
labs(title="Prop. Differences: Pleistocene - Modern")
forPlot$type
factor(forPlot$type, levels=c("Seg","Ag", "Random"), ordered=TRUE)
forPlot$type <- factor(forPlot$type, levels=c("Seg","Ag", "Random"), ordered=TRUE)
ggplot(aes(x=BodySize1, y=BodySize2), data=forPlot) +
geom_raster(aes(value=PleistModDiff, fill=PleistModDiff)) +
facet_wrap(~type, nrow=3) +
scale_fill_distiller(palette ="PuOr") +
labs(title="Prop. Differences: Pleistocene - Modern")
forPlot <- left_join(holoBM, modBM, by=c("mergeKey"="mergeKey")) %>% left_join(pleistBM, by=c("mergeKey"="mergeKey")) %>% ungroup
forPlot <- forPlot %>% mutate(PleistModDiff = (mod_prop - pleist_prop ), PleistHolDiff = (holo_prop - pleist_prop ), HoloModDiff = (mod_prop - pleist_prop)) %>%
select(PleistModDiff, PleistHolDiff, HoloModDiff, BodySize1=BodySize1.x, BodySize2=BodySize2.x, type)
forPlot$type <- factor(forPlot$type, levels=c("Seg","Ag", "Random"), ordered=TRUE)
ggplot(aes(x=BodySize1, y=BodySize2), data=forPlot) +
geom_raster(aes(value=PleistModDiff, fill=PleistModDiff)) +
facet_wrap(~type, nrow=3) +
scale_fill_distiller(palette ="PuOr") +
labs(title="Prop. Differences: Pleistocene - Modern")
gplot(aes(x=BodySize1, y=BodySize2), data=forPlot) +
geom_raster(aes(value=PleistModDiff, fill=PleistModDiff)) +
facet_wrap(~type, nrow=3) +
scale_fill_distiller(palette ="PuOr") +
labs(title="Prop. Differences: Pleistocene - Modern")
ggplot(aes(x=BodySize1, y=BodySize2), data=forPlot) +
geom_raster(aes(value=PleistModDiff, fill=PleistModDiff)) +
facet_wrap(~type, nrow=3) +
scale_fill_distiller(palette ="PuOr") +
labs(title="Prop. Differences: Pleistocene - Modern")
View(forPlot)
View(forPlot)
ggplot(aes(x=BodySize1, y=BodySize2), data=forPlot) +
geom_raster(aes(value=HoloModDiff, fill=HoloModDiff)) +
facet_wrap(~type, nrow=3) +
scale_fill_distiller(palette ="PuOr") +
labs(title="Prop. Differences: Holocene - Modern")
ggplot(aes(x=BodySize1, y=BodySize2), data=forPlot) +
geom_raster(aes(value=PleistHolDiff, fill=PleistHolDiff)) +
facet_wrap(~type, nrow=3) +
scale_fill_distiller(palette ="PuOr") +
labs(title="Prop. Differences: Pleistocene - Holocene")
?jpeg
theme_set(theme_bw(25))
plotHeight=1200
plotWidth=1200
myLabeller <- c(pleist_mod_seg="segregated pairs", pleist_mod_agg="aggregated pairs", pleist_mod_rand="random pairs")
jpeg(filename = "~/Dropbox/DietPleistoceneModern", height = plotHeight, width=plotWidth)
ggplot(aes(x=trait1, y=trait2), data=forPlot %>% mutate(pleist_mod_agg = (modern_agg - pleistocene_agg ), pleist_mod_seg=(modern_seg - pleistocene_seg), pleist_mod_rand=(modern_rand - pleistocene_rand)) %>% select(trait1, trait2, pleist_mod_seg, pleist_mod_agg, pleist_mod_rand) %>% melt) +
geom_raster(aes(value=value, fill=value)) +
facet_wrap(~variable, nrow=3, labeller = as_labeller(myLabeller)) +
scale_fill_distiller(palette ="PuOr") +
labs(title="Prop. Differences: Pleistocene - Modern")
dev.off()
# Chunk 1
library(dplyr)
library(ggplot2)
library(gridExtra)
library(reshape2)
library(tidyr)
source("~/Desktop/Traits_Functions.R")
traits <- read.table("~/Desktop/lyonsTraits_050416.csv", header=T, sep=",")
holocene <- read.table("~/Desktop/lyonsHolocene_pairs.csv", sep=",", header=T)
holocene <- holocene[,-1]
pleistocene <- read.table("~/Desktop/lyonsPleistocene_pairs.csv", sep=",", header=T)
pleistocene <- pleistocene[,-1]
modern <- read.table("~/Desktop/LyonsModernPairs_AMJ_03222016.csv", sep=",", header=T)
# Chunk 2
pleistocene_matched <- qualTrait2(pairs=pleistocene,traits=traits,variable=traits$DIET_CAT,main="DIET_CAT for Pleistocene")
holocene_matched <- qualTrait2(pairs=holocene,traits=traits,variable=traits$DIET_CAT,main="DIET_CAT for Holocene")
modern_matched <- qualTrait2(pairs=modern,traits=traits,variable=traits$DIET_CAT,main="DIET_CAT for Modern")
# Chunk 3
## this assumes that the rows of holocene, modern and pleistocene_matched dataframes correspond to the same traits.  They do currently
forPlot <- do.call(cbind, args=list(
pleistocene_matched$results %>% select(trait1=trait1, trait2=trait2, pleistocene_agg=agPop.1, pleistocene_seg = segPop.1, pleistocene_rand = randPop.1),
holocene_matched$results %>% select(holocene_agg=agPop.1, holocene_seg = segPop.1, holocene_rand = randPop.1),
modern_matched$results %>% select(modern_agg=agPop.1, modern_seg = segPop.1, modern_rand = randPop.1)
))
theme_set(theme_bw(25))
plotHeight=1200
plotWidth=1200
jpeg(filename = "~/Dropbox/DietPleistoceneHolocene.jpg", height = plotHeight, width=plotWidth)
myLabeller <- c("pleist_hol_seg"="segregated pairs", pleist_hol_agg="aggregated pairs", pleist_hol_rand="random pairs")
ggplot(aes(x=trait1, y=trait2), data=forPlot %>% mutate(pleist_hol_agg = (holocene_agg - pleistocene_agg), pleist_hol_seg=(holocene_seg - pleistocene_seg), pleist_hol_rand=(holocene_rand - pleistocene_rand)) %>% select(trait1, trait2, pleist_hol_seg, pleist_hol_agg, pleist_hol_rand) %>% melt) +
geom_raster(aes(value=value, fill=value)) +
facet_wrap(~variable, nrow=3, labeller = as_labeller(myLabeller)) +
scale_fill_distiller(palette ="PuOr") +
labs(title="Prop. Differences: Pleistocene - Holocene")
dev.off()
theme_set(theme_bw(35))
plotHeight=1200
plotWidth=1200
jpeg(filename = "~/Desktop/DietPleistoceneHolocene.jpg", height = plotHeight, width=plotWidth)
myLabeller <- c("pleist_hol_seg"="segregated pairs", pleist_hol_agg="aggregated pairs", pleist_hol_rand="random pairs")
ggplot(aes(x=trait1, y=trait2), data=forPlot %>% mutate(pleist_hol_agg = (holocene_agg - pleistocene_agg), pleist_hol_seg=(holocene_seg - pleistocene_seg), pleist_hol_rand=(holocene_rand - pleistocene_rand)) %>% select(trait1, trait2, pleist_hol_seg, pleist_hol_agg, pleist_hol_rand) %>% melt) +
geom_raster(aes(value=value, fill=value)) +
facet_wrap(~variable, nrow=3, labeller = as_labeller(myLabeller)) +
scale_fill_distiller(palette ="PuOr") +
labs(title="Prop. Differences: Pleistocene - Holocene")
dev.off()
jpeg(filename = "~/Desktop/BodyMassPleistoceneModern.jpg", height = plotHeight, width=plotWidth)
ggplot(aes(x=BodySize1, y=BodySize2), data=forPlot) +
geom_raster(aes(value=PleistModDiff, fill=PleistModDiff)) +
facet_wrap(~type, nrow=3) +
scale_fill_distiller(palette ="PuOr") +
labs(title="Prop. Differences: Pleistocene - Modern")
library(dplyr)
library(ggplot2)
coord <- readRDS("~/Dropbox/ETE-pairs-through-time/500 year analysis/goodSites_coordinates_500yearBins.RDS")
clim <- reshape2::melt(readRDS("~/Dropbox/ETE-pairs-through-time/500 year analysis/Climate data core by time_3-27-16.rds")$tmax_high_quart)
names(clim) <- c("site","time","tmax_high_quart")
clim <- clim %>% filter(!is.na(tmax_high_quart))
forPlot <- left_join(coord, clim)
ggplot(data=forPlot, aes(x=lat,xend=lat, y=time-250, yend=time+250)) +
scale_y_reverse() +
geom_segment(aes(color=tmax_high_quart), size=1.1) +
theme_classic() +
labs(x="site (ordered by latitude)", y="time (yBP)") +
theme(axis.text.x=element_blank()) +
scale_color_distiller(palette="RdYlBu", guide = guide_legend(title = "max temp in warm quarter"))
pdf("~/Dropbox/ETE-pairs-through-time/corePlotByLatitude.pdf", width=16, height=8)
ggplot(data=forPlot, aes(x=lat,xend=lat, y=time-250, yend=time+250)) +
scale_y_reverse() +
geom_segment(aes(color=tmax_high_quart), size=1.1) +
theme_classic() +
labs(x="site (ordered by latitude)", y="time (yBP)") +
theme(axis.text.x=element_blank()) +
scale_color_distiller(palette="RdYlBu", guide = guide_legend(title = "max temp in warm quarter"))
dev.off()
library(dplyr)
library(ggplot2)
coord <- readRDS("~/Dropbox/ETE-pairs-through-time/500 year analysis/goodSites_coordinates_500yearBins.RDS")
clim <- reshape2::melt(readRDS("~/Dropbox/ETE-pairs-through-time/500 year analysis/Climate data core by time_3-27-16.rds")$tmax_high_quart)
names(clim) <- c("site","time","tmax_high_quart")
clim <- clim %>% filter(!is.na(tmax_high_quart))
forPlot <- left_join(coord, clim)
pdf("~/Dropbox/ETE-pairs-through-time/corePlotByLatitude.pdf", width=16, height=8)
ggplot(data=forPlot, aes(x=lat,xend=lat, y=time-250, yend=time+250)) +
scale_y_reverse() +
geom_segment(aes(color=tmax_high_quart), size=1.1) +
theme_classic() +
labs(x="site (ordered by latitude)", y="time (yBP)") +
theme(axis.text.x=element_blank()) +
scale_color_distiller(palette="RdYlBu", guide = guide_legend(title = "max temp in warm quarter"))
dev.off()
pdf("~/Dropbox/ETE-pairs-through-time/corePlotBySite_orderedByLatitude.pdf", width=16, height=8)
ggplot(data=forPlot, aes(x=reorder(site,lat),xend=reorder(site,lat), y=time-250, yend=time+250)) +
scale_y_reverse() +
geom_segment(aes(color=tmax_high_quart), size=1.1) +
theme_classic() +
labs(x="site (ordered by latitude)", y="time (yBP)") +
theme(axis.text.x=element_blank()) +
scale_color_distiller(palette="RdYlBu", guide = guide_legend(title = "max temp in warm quarter"))
dev.off()
library(dplyr)
library(ggplot2)
coord <- readRDS("~/Dropbox/ETE-pairs-through-time/500 year analysis/goodSites_coordinates_500yearBins.RDS")
clim <- reshape2::melt(readRDS("~/Dropbox/ETE-pairs-through-time/500 year analysis/Climate data core by time_3-27-16.rds")$tmax_high_quart)
names(clim) <- c("site","time","tmax_high_quart")
clim <- clim %>% filter(!is.na(tmax_high_quart))
forPlot <- left_join(coord, clim)
pdf("~/Dropbox/ETE-pairs-through-time/corePlotByLatitude.pdf", width=16, height=8)
ggplot(data=forPlot, aes(x=lat,xend=lat, y=time-250, yend=time+250)) +
scale_y_reverse() +
geom_segment(aes(color=tmax_high_quart), size=1.3) +
theme_classic() +
labs(x="site (ordered by latitude)", y="time (yBP)") +
theme(axis.text.x=element_blank()) +
scale_color_distiller(palette="RdYlBu", guide = guide_legend(title = "max temp in warm quarter"))
dev.off()
library(dplyr)
library(ggplot2)
coord <- readRDS("~/Dropbox/ETE-pairs-through-time/500 year analysis/goodSites_coordinates_500yearBins.RDS")
clim <- reshape2::melt(readRDS("~/Dropbox/ETE-pairs-through-time/500 year analysis/Climate data core by time_3-27-16.rds")$tmax_high_quart)
names(clim) <- c("site","time","tmax_high_quart")
clim <- clim %>% filter(!is.na(tmax_high_quart))
forPlot <- left_join(coord, clim)
pdf("~/Dropbox/ETE-pairs-through-time/corePlotByLatitude.pdf", width=16, height=8)
ggplot(data=forPlot, aes(x=lat,xend=lat, y=time-250, yend=time+250)) +
scale_y_reverse() +
geom_segment(aes(color=tmax_high_quart), size=1.1) +
theme_classic() +
labs(x="site (ordered by latitude)", y="time (yBP)") +
theme(axis.text.x=element_blank()) +
scale_color_distiller(palette="RdYlBu", guide = guide_legend(title = "max temp in warm quarter"))
dev.off()
pdf("~/Dropbox/ETE-pairs-through-time/corePlotBySite_orderedByLatitude.pdf", width=16, height=8)
ggplot(data=forPlot, aes(x=reorder(site,lat),xend=reorder(site,lat), y=time-250, yend=time+250)) +
scale_y_reverse() +
geom_segment(aes(color=tmax_high_quart), size=1.1) +
theme_classic() +
labs(x="site (ordered by latitude)", y="time (yBP)") +
theme(axis.text.x=element_blank()) +
scale_color_distiller(palette="RdYlBu", guide = guide_legend(title = "max temp in warm quarter"))
dev.off()
pdf("~/Dropbox/ETE-pairs-through-time/corePlotByLatitude.pdf", width=16, height=8)
ggplot(data=forPlot, aes(x=lat,xend=lat, y=time-250, yend=time+250)) +
scale_y_reverse() +
geom_segment(aes(color=tmax_high_quart), size=1.1) +
theme_classic() +
labs(x="site (ordered by latitude)", y="time (yBP)") +
scale_color_distiller(palette="RdYlBu", guide = guide_legend(title = "max temp in warm quarter"))
dev.off()
library(dplyr)
library(ggplot2)
coord <- readRDS("~/Dropbox/ETE-pairs-through-time/500 year analysis/goodSites_coordinates_500yearBins.RDS")
clim <- reshape2::melt(readRDS("~/Dropbox/ETE-pairs-through-time/500 year analysis/Climate data core by time_3-27-16.rds")$tmax_high_quart)
names(clim) <- c("site","time","tmax_high_quart")
clim <- clim %>% filter(!is.na(tmax_high_quart))
forPlot <- left_join(coord, clim)
pdf("~/Dropbox/ETE-pairs-through-time/corePlotByLatitude.pdf", width=16, height=8)
ggplot(data=forPlot, aes(x=lat,xend=lat, y=time-250, yend=time+250)) +
scale_y_reverse() +
geom_segment(aes(color=tmax_high_quart), size=1.1) +
theme_classic() +
labs(x="core latitude", y="time (yBP)") +
scale_color_distiller(palette="RdYlBu", guide = guide_legend(title = "max temp in warm quarter"))
dev.off()
# pdf("~/Dropbox/ETE-pairs-through-time/corePlotBySite_orderedByLatitude.pdf", width=16, height=8)
# ggplot(data=forPlot, aes(x=reorder(site,lat),xend=reorder(site,lat), y=time-250, yend=time+250)) +
#   scale_y_reverse() +
#   geom_segment(aes(color=tmax_high_quart), size=1.1) +
#   theme_classic() +
#   labs(x="site (ordered by latitude)", y="time (yBP)") +
#   theme(axis.text.x=element_blank()) +
#   scale_color_distiller(palette="RdYlBu", guide = guide_legend(title = "max temp in warm quarter"))
#
# dev.off()
library(dplyr)
db <- src_postgres("ete", 130.111.193.18, 5432, "andrew", "xyz-1234")
db <- src_postgres("ete", "130.111.193.18", 5432, "andrew", "xyz-1234")
install.packages("RPostgreSQL")
db <- src_postgres("ete", "130.111.193.18", 5432, "andrew", "!et3")
tables(db)
db
tbl(db, "sites")
tbl(db, "sites") %>% select(datasetname) %>% distinct()
test <- tbl(db, "sites") %>% select(datasetname) %>% distinct() %>% collect()
test
View(test)
db
rm(test)
db
occurrences <- tbl(db, "occurrence")
rm(occurrences)
occurrence <- tbl(db, "occurrence")
library(dplyr)
db <- src_postgres("ete", "130.111.193.18", 5432, "andrew", "!et3")
site <- tbl(db, "sites")
occurrence <- tbl(db, "occurrence")
sitetrait <- tbl(db, "sitetrait")
sitetrait
site
db
sites
site
sitetrait
sites
site
site %>% select(datasetname) %>% distinct() %>% filter(datasetname %like% Behren)
site %>% select(datasetname) %>% distinct() %>% filter(datasetname %like% "Behren")
site %>% select(datasetname) %>% distinct() %>% filter(grepl("Behren",datasetname))
site %>% select(datasetname) %>% distinct() %>% dplyr::filter(datasetname %like% Behren)
site %>% select(datasetname) %>% distinct() %>% dplyr::filter(datasetname %like% "Behren")
site
test <- select(site, datasetname)
test <- select(site, datasetname) %>% collect()
unique(test)
test <- unique(test)
test
View(test)
rm(trait)
rm(test)
read.table("~/Dropbox/ETE-pairs-through-time/Trait\ data/PUBLIC\ TRY\ data/2516.txt", header=T)
scan("~/Dropbox/ETE-pairs-through-time/Trait\ data/PUBLIC\ TRY\ data/2516.txt", n = 5)
scan("~/Dropbox/ETE-pairs-through-time/Trait\ data/PUBLIC\ TRY\ data/2516.txt", what = "character", n = 5)
scan("~/Dropbox/ETE-pairs-through-time/Trait\ data/PUBLIC\ TRY\ data/2516.txt", what = "character", n = 500)
try <- read.table("~/Dropbox/ETE-pairs-through-time/Trait\ data/PUBLIC\ TRY\ data/2516.txt", sep="\t", header=T)
try <- read.table("~/Dropbox/ETE-pairs-through-time/Trait\ data/PUBLIC\ TRY\ data/2516.txt", sep="\t", header=T, comment.char = "")
library(datatable)
library(data.table)
install.packages("datable")
install.packages("data.table")
try <- data.table::fread("~/Dropbox/ETE-pairs-through-time/Trait\ data/PUBLIC\ TRY\ data/2516.txt")
names(try)[18:19]
class(try)
remove.packages(rJava)
remove.packages("rJava")
install.packages("rJava")
require(rJava)
install.packages("ReporteRs")
library(ReporteRs)
hist(rnorm(2000))
hist(rnorm(2000)^2)
party <- read.delim("http://hompal-stats.wabarr.com/datasets/party_affiliation.txt", sep=",")
library(ggplot2)
qqplot(data=party, aes(x=gender, fill=party))
ggplot(data=party, aes(x=gender, fill=party))
politics <- read.delim("http://hompal-stats.wabarr.com/datasets/party_affiliation.txt", sep=",")
ggplot(data=politics, aes(x=gender, fill=party))
View(politics)
ggplot(data=politics, aes(x=gender, fill=party))
ggplot(data=politics, aes(x=gender, fill=party)) + geom_bar(position="dodge")
ggplot(data=politics, aes(x=gender, fill=party)) +
geom_bar(position="dodge") +
scale_fill_manual(values=c("blue", "green", "red"))
ggplot(data=politics, aes(x=gender, fill=party)) +
geom_bar(position="dodge") +
scale_fill_manual(values=c("blue", "green", "red")) +
theme_bw(20)
levels(politics$party)
politics$party <- factor(politics$party, levels=rev(levels(politics$party)), ordered = T)
ggplot(data=politics, aes(x=gender, fill=party)) +
geom_bar(position="dodge") +
#scale_fill_manual(values=c("blue", "green", "red")) +
theme_bw(20)
colors()
?colors
colors(TRUE)
demo("colors")
?SpatialPoints
??sp::SpatialPoints
myData <- data.frame(
site = sample(c("testpit","excavation"), 1000, replace=T),
species = sample(c("Homo_sapiens","Hippo", "Bovid"),1000, replace=T)
)
head(myData)
myData <- data.frame(
method = sample(c("testpit","excavation"), 1000, replace=T),
species = sample(c("Homo_sapiens","Hippo", "Bovid"),1000, replace=T)
)
head(myData)
library(ggplot2)
ggplot(myData, aes(x=species)) + geom_bar()
ggplot(myData, aes(x=method)) + geom_bar()\
ggplot(myData, aes(x=method)) + geom_bar()
ggplot(myData, aes(x=method, fill=species)) + geom_bar()
setwd("~/habitat-ABM/")
read.csv("output.csv")
agents <- read.csv("output.csv")
View(agents)
ggplot(agents, aes(x=x, y=y)) + geom_raster()
library(ggplot2)
ggplot(agents, aes(x=x, y=y)) + geom_raster()
faithfuld
head(faithfuld)
ggplot(agents, aes(x=x, y=y)) + geom_raster(aes(fill=..count..))
ggplot(agents, aes(x=x, y=y)) + stat_bin_2d(aes(fill=..count..))
theme_set(theme_bw(14))
ggplot(agents, aes(x=x, y=y)) + stat_bin_2d(aes(fill=..count..))
setwd("~/habitat-ABM/")
agents <- read.csv("output.csv")
library(ggplot2)
theme_set(theme_bw(14))
ggplot(agents, aes(x=x, y=y)) + stat_bin_2d(aes(fill=..count..))
setwd("~/habitat-ABM/")
agents <- read.csv("output.csv")
library(ggplot2)
theme_set(theme_bw(14))
ggplot(agents, aes(x=x, y=y)) + stat_bin_2d(aes(fill=..count..))
setwd("~/habitat-ABM/")
agents <- read.csv("output.csv")
library(ggplot2)
theme_set(theme_bw(14))
ggplot(agents, aes(x=x, y=y)) + stat_bin_2d(aes(fill=..count..))
library(dplyr)
agents %>% group_by(x, y) %>%
mutate(cellCount = count())
library(ggplot2)
library(dplyr)
setwd("~/habitat-ABM/")
agents <- read.csv("output.csv")
theme_set(theme_bw(14))
ggplot(agents, aes(x=x, y=y)) + stat_bin_2d(aes(fill=..count..))
agents %>% group_by(x, y) %>%
mutate(cellCount = count())
agents %>% group_by(x, y)
agents %>%
group_by(x, y) %>%
mutate(cellCount = n())
agents %>%
group_by(x, y) %>%
mutate(cellCount = n()) %>%
summarize(perGrazers = sum(habitat_preference == "Grassland")/cellCount)
agents %>%
group_by(x, y) %>%
mutate(cellCount = n()) %>%
summarize(perGrazers = unique(sum(habitat_preference == "Grassland")/cellCount))
forPlot <- agents %>%
group_by(x, y) %>%
mutate(cellCount = n()) %>%
summarize(perGrazers = unique(sum(habitat_preference == "Grassland")/cellCount))
ggplot(forPlot, aes(x,y)) + geom_raster()
ggplot(forPlot, aes(x,y)) + geom_raster(fill=perGrazers)
ggplot(forPlot, aes(x,y,fill=perGrazers)) +
geom_raster()
fossilProp <- agents %>%
group_by(x, y) %>%
mutate(cellCount = n()) %>%
summarize(perGrazers = unique(sum(habitat_preference == "Grassland")/cellCount))
ggplot(fossilProp, aes(x,y,fill=perGrazers)) +
geom_raster()
ggplot(agents, aes(x=x, y=y)) + stat_bin_hex(aes(fill=..count..))
library(dplyr)
setwd("~/habitat-ABM/")
agents <- read.csv("output.csv")
theme_set(theme_bw(14))
ggplot(agents, aes(x=x, y=y)) + stat_bin_hex(aes(fill=..count..))
?stat_binhex
?stat_bin_hex
2
d <- ggplot(diamonds, aes(carat, price))
d + geom_hex()
d <- ggplot(diamonds, aes(carat, price))
d + geom_bin2d()
d <- ggplot(diamonds, aes(carat, price))
d + geom_hex()
