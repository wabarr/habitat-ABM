makeWorld(range=20)
makeWorld(range=20)
makeWorld(range=20)
makeWorld(range=20)
makeWorld(range=20)
makeWorld(range=20)
makeWorld(range=20)
makeWorld(range=20)
makeWorld(size=10,range=20)
makeWorld(size=10,range=20)
makeWorld(size=10,range=20)
makeWorld(size=10,range=20)
makeWorld(size=10,range=20)
makeWorld(size=10,range=20)
makeWorld(size=10,range=20)
makeWorld(size=10,range=20)
makeWorld(size=100,range=20)
makeWorld(size=100,range=20)
makeWorld(size=100,range=20)
makeWorld <- function(size=100, range=5, nclasses=2, habitatColors=c("yellow","darkgreen")){
require(gstat)
require(ggplot2)
xy <- expand.grid(1:size, 1:size)
names(xy) <- c('x','y')
g.dummy <- gstat(formula=z~1, locations=~x+y, dummy=T, beta=1, model=vgm(psill=0.025, range=range, model='Exp'), nmax=20)
yy <- predict(g.dummy, newdata=xy, nsim = 1)
names(yy) <- c("x","y","value")
yy$value <- cut(yy$value,nclasses)
theme_set(theme_minimal())
thePlot <-
ggplot(data=yy) +
geom_raster(aes(x=x, y=y, fill=value)) +
scale_fill_manual(values = habitatColors) +
coord_fixed() +
theme(legend.position = "none")
print(thePlot)
return(yy)
}
makeWorld()
makeWorld(nclass=3)
makeWorld <- function(size=100, range=5, nclasses=2){
require(gstat)
require(ggplot2)
xy <- expand.grid(1:size, 1:size)
names(xy) <- c('x','y')
g.dummy <- gstat(formula=z~1, locations=~x+y, dummy=T, beta=1, model=vgm(psill=0.025, range=range, model='Exp'), nmax=20)
yy <- predict(g.dummy, newdata=xy, nsim = 1)
names(yy) <- c("x","y","value")
yy$value <- cut(yy$value,nclasses)
theme_set(theme_minimal())
thePlot <-
ggplot(data=yy) +
geom_raster(aes(x=x, y=y, fill=value)) +
coord_fixed() +
theme(legend.position = "none")
print(thePlot)
return(yy)
}
makeWorld(nclass=4)
makeWorld(nclass=3)
?cut
makeWorld <- function(size=100, range=5, nclasses=2){
require(gstat)
require(ggplot2)
xy <- expand.grid(1:size, 1:size)
names(xy) <- c('x','y')
g.dummy <- gstat(formula=z~1, locations=~x+y, dummy=T, beta=1, model=vgm(psill=0.025, range=range, model='Exp'), nmax=20)
yy <- predict(g.dummy, newdata=xy, nsim = 1)
names(yy) <- c("x","y","value")
yy$value <- cut(yy$value,nclasses,labels=F)
theme_set(theme_minimal())
thePlot <-
ggplot(data=yy) +
geom_raster(aes(x=x, y=y, fill=value)) +
coord_fixed() +
theme(legend.position = "none")
print(thePlot)
return(yy)
}
makeWorld()
makeWorld <- function(size=100, range=5, nclasses=2){
require(gstat)
require(ggplot2)
xy <- expand.grid(1:size, 1:size)
names(xy) <- c('x','y')
g.dummy <- gstat(formula=z~1, locations=~x+y, dummy=T, beta=1, model=vgm(psill=0.025, range=range, model='Exp'), nmax=20)
yy <- predict(g.dummy, newdata=xy, nsim = 1)
names(yy) <- c("x","y","category")
yy$category <- cut(yy$category,nclasses,labels=F)
theme_set(theme_minimal())
thePlot <-
ggplot(data=yy) +
geom_raster(aes(x=x, y=y, fill=category)) +
coord_fixed() +
theme(legend.position = "none")
print(thePlot)
return(yy)
}
makeWorld()
makeWorld <- function(size=100, range=5, nclasses=2, habitatColors = c("yellow","darkgreen")){
require(gstat)
require(ggplot2)
xy <- expand.grid(1:size, 1:size)
names(xy) <- c('x','y')
g.dummy <- gstat(formula=z~1, locations=~x+y, dummy=T, beta=1, model=vgm(psill=0.025, range=range, model='Exp'), nmax=20)
yy <- predict(g.dummy, newdata=xy, nsim = 1)
names(yy) <- c("x","y","category")
yy$category <- cut(yy$category,nclasses,labels=F)
theme_set(theme_minimal())
thePlot <-
ggplot(data=yy) +
geom_raster(aes(x=x, y=y, fill=category)) +
coord_fixed() +
theme(legend.position = "none")
print(thePlot)
return(yy)
}
makeWor
makeWorld
makeWorld()
makeWorld <- function(size=100, range=5, nclasses=2, habitatColors = c("yellow","darkgreen"), returnDF=FALSE){
require(gstat)
require(ggplot2)
xy <- expand.grid(1:size, 1:size)
names(xy) <- c('x','y')
g.dummy <- gstat(formula=z~1, locations=~x+y, dummy=T, beta=1, model=vgm(psill=0.025, range=range, model='Exp'), nmax=20)
yy <- predict(g.dummy, newdata=xy, nsim = 1)
names(yy) <- c("x","y","category")
yy$category <- cut(yy$category,nclasses,labels=F)
theme_set(theme_minimal())
thePlot <-
ggplot(data=yy) +
geom_raster(aes(x=x, y=y, fill=category)) +
coord_fixed() +
theme(legend.position = "none")
print(thePlot)
if(returnDF) return(yy)
}
makeWorld()
makeWorld <- function(size=100, range=5, nclasses=2, habitatColors = c("#ADA93C","283400"), returnDF=FALSE){
require(gstat)
require(ggplot2)
xy <- expand.grid(1:size, 1:size)
names(xy) <- c('x','y')
g.dummy <- gstat(formula=z~1, locations=~x+y, dummy=T, beta=1, model=vgm(psill=0.025, range=range, model='Exp'), nmax=20)
yy <- predict(g.dummy, newdata=xy, nsim = 1)
names(yy) <- c("x","y","category")
yy$category <- cut(yy$category,nclasses,labels=F)
theme_set(theme_minimal())
thePlot <-
ggplot(data=yy) +
geom_raster(aes(x=x, y=y, fill=category)) +
coord_fixed() +
theme(legend.position = "none")
print(thePlot)
if(returnDF) return(yy)
}
makeWorld()
makeWorld <- function(size=100, range=5, nclasses=2, habitatColors = c("#ADA93C","283400"), returnDF=FALSE){
require(gstat)
require(ggplot2)
xy <- expand.grid(1:size, 1:size)
names(xy) <- c('x','y')
g.dummy <- gstat(formula=z~1, locations=~x+y, dummy=T, beta=1, model=vgm(psill=0.025, range=range, model='Exp'), nmax=20)
yy <- predict(g.dummy, newdata=xy, nsim = 1)
names(yy) <- c("x","y","category")
yy$category <- cut(yy$category,nclasses,labels=F)
theme_set(theme_minimal())
thePlot <-
ggplot(data=yy) +
geom_raster(aes(x=x, y=y, fill=category)) +
coord_fixed() +
theme(legend.position = "none")
print(thePlot)
if(returnDF) return(yy)
}
makeWorld()
makeWorld <- function(size=100, range=5, nclasses=2, habitatColors = c("#ADA93C","#283400"), returnDF=FALSE){
require(gstat)
require(ggplot2)
xy <- expand.grid(1:size, 1:size)
names(xy) <- c('x','y')
g.dummy <- gstat(formula=z~1, locations=~x+y, dummy=T, beta=1, model=vgm(psill=0.025, range=range, model='Exp'), nmax=20)
yy <- predict(g.dummy, newdata=xy, nsim = 1)
names(yy) <- c("x","y","category")
yy$category <- cut(yy$category,nclasses,labels=F)
theme_set(theme_minimal())
thePlot <-
ggplot(data=yy) +
geom_raster(aes(x=x, y=y, fill=category)) +
coord_fixed() +
theme(legend.position = "none")
print(thePlot)
if(returnDF) return(yy)
}
makeWorld()
thePlot <-
ggplot(data=yy) +
geom_raster(aes(x=x, y=y, fill=category)) +
coord_fixed() +
theme(legend.position = "none") +
scale_fill_manual(values = habitatColors)
makeWorld <- function(size=100, range=5, nclasses=2, habitatColors = c("#ADA93C","#283400"), returnDF=FALSE){
require(gstat)
require(ggplot2)
xy <- expand.grid(1:size, 1:size)
names(xy) <- c('x','y')
g.dummy <- gstat(formula=z~1, locations=~x+y, dummy=T, beta=1, model=vgm(psill=0.025, range=range, model='Exp'), nmax=20)
yy <- predict(g.dummy, newdata=xy, nsim = 1)
names(yy) <- c("x","y","category")
yy$category <- cut(yy$category,nclasses,labels=F)
theme_set(theme_minimal())
thePlot <-
ggplot(data=yy) +
geom_raster(aes(x=x, y=y, fill=category)) +
coord_fixed() +
theme(legend.position = "none") +
scale_fill_manual(values = habitatColors)
print(thePlot)
if(returnDF) return(yy)
}
makeWorld()
makeWorld <- function(size=100, range=5, nclasses=2, habitatColors = c("#ADA93C","#283400"), returnDF=FALSE){
require(gstat)
require(ggplot2)
xy <- expand.grid(1:size, 1:size)
names(xy) <- c('x','y')
g.dummy <- gstat(formula=z~1, locations=~x+y, dummy=T, beta=1, model=vgm(psill=0.025, range=range, model='Exp'), nmax=20)
yy <- predict(g.dummy, newdata=xy, nsim = 1)
names(yy) <- c("x","y","category")
yy$category <- cut(yy$category,nclasses,labels=F)
theme_set(theme_minimal())
thePlot <-
ggplot(data=yy) +
geom_raster(aes(x=x, y=y, fill=category)) +
coord_fixed() +
theme(legend.position = "none") +
scale_fill_manual(values = habitatColors)
print(thePlot)
if(returnDF) return(yy)
}
makeWorld()
makeWorld <- function(size=100, range=5, nclasses=2, habitatColors = c("yellow","green"), returnDF=FALSE){
require(gstat)
require(ggplot2)
xy <- expand.grid(1:size, 1:size)
names(xy) <- c('x','y')
g.dummy <- gstat(formula=z~1, locations=~x+y, dummy=T, beta=1, model=vgm(psill=0.025, range=range, model='Exp'), nmax=20)
yy <- predict(g.dummy, newdata=xy, nsim = 1)
names(yy) <- c("x","y","category")
yy$category <- cut(yy$category,nclasses,labels=F)
theme_set(theme_minimal())
thePlot <-
ggplot(data=yy) +
geom_raster(aes(x=x, y=y, fill=category)) +
coord_fixed() +
theme(legend.position = "none") +
scale_fill_manual(values = habitatColors)
print(thePlot)
if(returnDF) return(yy)
}
makeWorld()
thePlot <-
ggplot(data=yy) +
geom_raster(aes(x=x, y=y, fill=category)) +
coord_fixed() +
theme(legend.position = "none") +
scale_fill_manual(values = habitatColors)
makeWorld <- function(size=100, range=5, nclasses=2, habitatColors = c("#ADA93C","#283400"), returnDF=FALSE){
require(gstat)
require(ggplot2)
xy <- expand.grid(1:size, 1:size)
names(xy) <- c('x','y')
g.dummy <- gstat(formula=z~1, locations=~x+y, dummy=T, beta=1, model=vgm(psill=0.025, range=range, model='Exp'), nmax=20)
yy <- predict(g.dummy, newdata=xy, nsim = 1)
names(yy) <- c("x","y","category")
yy$category <- cut(yy$category,nclasses,labels=F)
theme_set(theme_minimal())
thePlot <-
ggplot(data=yy) +
geom_raster(aes(x=x, y=y, fill=factor(category))) +
coord_fixed() +
theme(legend.position = "none")
print(thePlot)
if(returnDF) return(yy)
}
makeWorld()
thePlot <-
ggplot(data=yy) +
geom_raster(aes(x=x, y=y, fill=factor(category))) +
coord_fixed() +
theme(legend.position = "none") +
scale_fill_manual(values=habitatColors)
makeWorld <- function(size=100, range=5, nclasses=2, habitatColors = c("#ADA93C","#283400"), returnDF=FALSE){
require(gstat)
require(ggplot2)
xy <- expand.grid(1:size, 1:size)
names(xy) <- c('x','y')
g.dummy <- gstat(formula=z~1, locations=~x+y, dummy=T, beta=1, model=vgm(psill=0.025, range=range, model='Exp'), nmax=20)
yy <- predict(g.dummy, newdata=xy, nsim = 1)
names(yy) <- c("x","y","category")
yy$category <- cut(yy$category,nclasses,labels=F)
theme_set(theme_minimal())
thePlot <-
ggplot(data=yy) +
geom_raster(aes(x=x, y=y, fill=factor(category))) +
coord_fixed() +
theme(legend.position = "none") +
scale_fill_manual(values=habitatColors)
print(thePlot)
if(returnDF) return(yy)
}
makeWorld()
makeWorld <- function(size=100, range=5, nclasses=2, habitatColors = c("#fff200","#1db125"), returnDF=FALSE){
require(gstat)
require(ggplot2)
xy <- expand.grid(1:size, 1:size)
names(xy) <- c('x','y')
g.dummy <- gstat(formula=z~1, locations=~x+y, dummy=T, beta=1, model=vgm(psill=0.025, range=range, model='Exp'), nmax=20)
yy <- predict(g.dummy, newdata=xy, nsim = 1)
names(yy) <- c("x","y","category")
yy$category <- cut(yy$category,nclasses,labels=F)
theme_set(theme_minimal())
thePlot <-
ggplot(data=yy) +
geom_raster(aes(x=x, y=y, fill=factor(category))) +
coord_fixed() +
theme(legend.position = "none") +
scale_fill_manual(values=habitatColors)
print(thePlot)
if(returnDF) return(yy)
}
makeWorld()
makeWorld <- function(size=100, range=5, nclasses=2, habitatColors = c("#fff200","#1db125"), returnDF=FALSE, main=NULL){
require(gstat)
require(ggplot2)
xy <- expand.grid(1:size, 1:size)
names(xy) <- c('x','y')
g.dummy <- gstat(formula=z~1, locations=~x+y, dummy=T, beta=1, model=vgm(psill=0.025, range=range, model='Exp'), nmax=20)
yy <- predict(g.dummy, newdata=xy, nsim = 1)
names(yy) <- c("x","y","category")
yy$category <- cut(yy$category,nclasses,labels=F)
theme_set(theme_minimal())
thePlot <-
ggplot(data=yy) +
geom_raster(aes(x=x, y=y, fill=factor(category))) +
coord_fixed() +
theme(legend.position = "none") +
scale_fill_manual(values=habitatColors)
if(missing(main)) thePlot <- thePlot + labs(title=sprintf("%dx%d - range=%d",size,size,range))
print(thePlot)
if(returnDF) return(yy)
}
makeWorld()
makeWorld <- function(size=100, range=5, nclasses=2, habitatColors = c("#fff200","#1db125"), returnDF=FALSE, main=NULL){
require(gstat)
require(ggplot2)
xy <- expand.grid(1:size, 1:size)
names(xy) <- c('x','y')
g.dummy <- gstat(formula=z~1, locations=~x+y, dummy=T, beta=1, model=vgm(psill=0.025, range=range, model='Exp'), nmax=20)
yy <- predict(g.dummy, newdata=xy, nsim = 1)
names(yy) <- c("x","y","category")
yy$category <- cut(yy$category,nclasses,labels=F)
theme_set(theme_minimal())
thePlot <-
ggplot(data=yy) +
geom_raster(aes(x=x, y=y, fill=factor(category))) +
coord_fixed() +
theme(legend.position = "none") +
scale_fill_manual(values=habitatColors)
if(missing(main)) thePlot <- thePlot + labs(title=sprintf("%dx%d world, range=%d",size,size,range))
print(thePlot)
if(returnDF) return(yy)
}
makeWorld()
library(ggplot2)
library(dplyr)
setwd("~/habitat-ABM/")
agents <- read.csv("fossil-record_output.csv")
theme_set(theme_bw(14))
length(agents$AgentID) == length(unique(agents$AgentID))
agentDensity <- ggplot(agents, aes(x=x, y=y)) +
stat_bin_2d(aes(fill=..count..)) +
labs(title="agent density") +
theme(legend.position = "bottom")
fossilProp <- agents %>%
group_by(x, y) %>%
mutate(cellCount = n()) %>%
summarize(perGrazers = unique(sum(habitat_preference == "Grassland")/cellCount))
perGrazers <- ggplot(fossilProp, aes(x,y,fill=perGrazers)) +
geom_raster() +
labs(title="percent grazers") +
theme(legend.position = "bottom")
ggsave(plot = perGrazers, filename="./percentGrazersInRecord.jpg", width = 8, height=8)
library(ggplot2)
library(dplyr)
setwd("~/habitat-ABM/")
agents <- read.csv("fossil-record_output.csv")
theme_set(theme_bw(14))
length(agents$AgentID) == length(unique(agents$AgentID))
agentDensity <- ggplot(agents, aes(x=x, y=y)) +
stat_bin_2d(aes(fill=..count..)) +
labs(title="agent density") +
theme(legend.position = "bottom") +
scale_fill_distiller(palette = "Spectral")
fossilProp <- agents %>%
group_by(x, y) %>%
mutate(cellCount = n()) %>%
summarize(perGrazers = unique(sum(habitat_preference == "Grassland")/cellCount))
perGrazers <- ggplot(fossilProp, aes(x,y,fill=perGrazers)) +
geom_raster() +
labs(title="percent grazers") +
theme(legend.position = "bottom") +
scale_fill_distiller(palette = "Spectral")
ggsave(plot = perGrazers, filename="./percentGrazersInRecord.jpg", width = 8, height=8)
library(ggplot2)
library(dplyr)
setwd("~/habitat-ABM/")
agents <- read.csv("fossil-record_output.csv")
theme_set(theme_bw(14))
length(agents$AgentID) == length(unique(agents$AgentID))
agentDensity <- ggplot(agents, aes(x=x, y=y)) +
stat_bin_2d(aes(fill=..count..)) +
labs(title="agent density") +
theme(legend.position = "bottom") +
scale_fill_distiller(palette = "Spectral")
fossilProp <- agents %>%
group_by(x, y) %>%
mutate(cellCount = n()) %>%
summarize(perGrazers = unique(sum(habitat_preference == "Grassland")/cellCount))
perGrazers <- ggplot(fossilProp, aes(x,y,fill=perGrazers)) +
geom_raster() +
labs(title="percent grazers") +
theme(legend.position = "bottom") +
scale_fill_distiller(palette = "Spectral")
ggsave(plot = agentDensity, filename="./OutputPlot_fossilDensity.jpg", width = 8, height=8)
ggsave(plot = perGrazers, filename="./OutputPlot_percentGrazers.jpg", width = 8, height=8)
library(ggplot2)
library(dplyr)
setwd("~/habitat-ABM/")
agents <- read.csv("fossil-record_output.csv")
theme_set(theme_bw(14))
length(agents$AgentID) == length(unique(agents$AgentID))
agentDensity <- ggplot(agents, aes(x=x, y=y)) +
stat_bin_2d(aes(fill=..count..)) +
labs(title="agent density") +
theme(legend.position = "bottom") +
scale_fill_distiller(palette = "Spectral")
fossilProp <- agents %>%
group_by(x, y) %>%
mutate(cellCount = n()) %>%
summarize(perGrazers = unique(sum(habitat_preference == "Grassland")/cellCount))
perGrazers <- ggplot(fossilProp, aes(x,y,fill=perGrazers)) +
geom_raster() +
labs(title="percent grazers") +
theme(legend.position = "bottom") +
scale_fill_distiller(palette = "Spectral")
ggsave(plot = agentDensity, filename="./plotOutput_fossilDensity.jpg", width = 8, height=8)
ggsave(plot = perGrazers, filename="./plotOutput_percentGrazers.jpg", width = 8, height=8)
library(ggplot2)
library(dplyr)
setwd("~/habitat-ABM/")
agents <- read.csv("fossil-record_output.csv")
theme_set(theme_bw(14))
length(agents$AgentID) == length(unique(agents$AgentID))
agentDensity <- ggplot(agents, aes(x=x, y=y)) +
stat_bin_2d(aes(fill=..count..)) +
labs(title="agent density") +
theme(legend.position = "bottom") +
scale_fill_distiller(palette = "Spectral")
head(agents)
fossilProp <- agents %>%
group_by(x, y) %>%
mutate(cellCount = n()) %>%
summarize(perGrazers = unique(sum(habitat_preference == "Grassland")/cellCount))
head(fossilProp)
View(agents)
View(fossilProp)
View(fossilProp)
fossilProp <- agents %>%
group_by(x, y) %>%
mutate(cellCount = n()) %>%
summarize(perGrazers = unique(sum(habitat_preference == "Grassland")/cellCount), count=unique(cellCount))
View(fossilProp)
agentDensity <- ggplot(fossilProp, aes(x=x, y=y, fill=count)) +
geom_raster() +
labs(title="agent density") +
theme(legend.position = "bottom") +
scale_fill_distiller(palette = "Spectral")
agentDensity
library(ggplot2)
library(dplyr)
setwd("~/habitat-ABM/")
agents <- read.csv("fossil-record_output.csv")
theme_set(theme_bw(14))
length(agents$AgentID) == length(unique(agents$AgentID))
fossilProp <- agents %>%
group_by(x, y) %>%
mutate(cellCount = n()) %>%
summarize(perGrazers = unique(sum(habitat_preference == "Grassland")/cellCount), count=unique(cellCount))
agentDensity <- ggplot(fossilProp, aes(x=x, y=y, fill=count)) +
geom_raster() +
labs(title="agent density") +
theme(legend.position = "bottom") +
scale_fill_distiller(palette = "Spectral")
perGrazers <- ggplot(fossilProp, aes(x,y,fill=perGrazers)) +
geom_raster() +
labs(title="percent grazers") +
theme(legend.position = "bottom") +
scale_fill_distiller(palette = "Spectral")
ggsave(plot = agentDensity, filename="./plotOutput_fossilDensity.jpg", width = 8, height=8)
ggsave(plot = perGrazers, filename="./plotOutput_percentGrazers.jpg", width = 8, height=8)
